---
- name: Setup EFK Monitoring Stack
  hosts: master
  become: yes
  tasks:
    - name: Create namespace for EFK
      shell: kubectl create namespace efk-monitoring
      ignore_errors: yes
    - name: Add Elastic Helm Repository
      command: helm repo add elastic https://helm.elastic.co

    - name: Update Helm Repositories
      command: helm repo update

    - name: Install Elasticsearch
      command: helm install elasticsearch elastic/elasticsearch --version 7.17.3 -n efk-monitoring --set persistence.enabled=false,replicas=1

    - name: Wait for Elasticsearch to be up
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: efk-monitoring
      register: es_pods
      until: es_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length == 1
      retries: 10
      delay: 30

    - name: Install Kibana
      command: helm install kibana elastic/kibana --version 7.17.3 -n efk-monitoring

    - name: Wait for Kibana to be up
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: efk-monitoring
      register: kibana_pods
      until: kibana_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length == 1
      retries: 10
      delay: 30

    - name: Apply Fluentd RBAC
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', './fluentd-rbac.yaml') }}"

    - name: Apply Fluentd Configuration
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', './fluentd-config-map.yaml') }}"
    - name: Fetch the current kibana-kibana service YAML
      shell: kubectl get svc kibana-kibana -n efk-monitoring -o yaml > /tmp/kibana-kibana-svc.yaml
      
    - name: Update service type to NodePort
      shell: |
        sed -i 's/type: ClusterIP/type: NodePort/' /tmp/kibana-kibana-svc.yaml
        sed -i '/nodePort: 31234/!s/targetPort: 5601/&\n  nodePort: 30010/' /tmp/kibana-kibana-svc.yaml

    - name: Apply the updated service YAML
      shell: kubectl apply -f /tmp/kibana-kibana-svc.yaml

    - name: Verify the updated service
      shell: kubectl get svc -n efk-monitoring kibana-kibana
      register: updated_svc

    - debug: var=ingress_pods.stdout_lines    
